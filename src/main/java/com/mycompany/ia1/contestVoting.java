/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ia1;

import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author rociopv
 */
public class contestVoting extends javax.swing.JFrame {
    public long personalVotesLeft;
    /**
     * Creates new form contestVoting
     */
    public contestVoting() {
        
        initComponents();
        String query = "SELECT * FROM Submissions WHERE contestID = ?"; 
        String[] parameters ={common.contestID};
        String[] columnResults = {"title"};
            
        String[] extracted = common.SQLquery(query, parameters, columnResults, false, -1, null);
        titles.setModel(new javax.swing.DefaultComboBoxModel<>(extracted));
        
        votesLeft.setText("Votes left: "+ calculateVotesLeft());
    }
    private long calculateVotesLeft(){
        String query = "SELECT * FROM VotesperContest WHERE contestID = ?"; 
        String[] parameters2 = {common.contestID};
        String[] columnResults2 = {"userVotes","userMaxVotes"};
        String[] extracted2 = common.SQLquery(query, parameters2, columnResults2, false, -1, null);
        System.out.println("extracted " + extracted2[0]+" "+extracted2[1]);
        if(extracted2[0]!=null){
            personalVotesLeft = Integer.parseInt(extracted2[1]) - Pattern.compile(common.currentUser).matcher(extracted2[0]).results().count();

        }
        else{
            personalVotesLeft = Integer.parseInt(extracted2[1]);
        }
        return personalVotesLeft;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imageDisplayer = new javax.swing.JLabel();
        titles = new javax.swing.JComboBox<>();
        voteButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        votesLeft = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        warning = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 600));
        setMinimumSize(new java.awt.Dimension(1000, 600));

        jPanel1.setBackground(new java.awt.Color(226, 202, 163));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel1.setSize(new java.awt.Dimension(800, 500));

        jScrollPane1.setViewportView(imageDisplayer);

        titles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        titles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titlesActionPerformed(evt);
            }
        });

        voteButton.setBackground(new java.awt.Color(220, 239, 216));
        voteButton.setText("Vote for this Submission");
        voteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Select a submission");

        votesLeft.setText("Votes left:");

        back.setText("back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        warning.setForeground(new java.awt.Color(255, 0, 0));
        warning.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(back)
                        .addComponent(votesLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(warning))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(72, 72, 72)
                        .addComponent(titles, 0, 394, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(votesLeft)
                        .addGap(35, 35, 35)
                        .addComponent(warning)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(voteButton)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.setVisible(false);
        new In().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void titlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titlesActionPerformed
        String query = "SELECT * FROM Submissions WHERE title = ? AND contestID = ?"; 
            int[] dimensions = {800,500};
           
            String[] columnResults = {"document"};
            String[] parameters = {String.valueOf(titles.getSelectedItem()),common.contestID};
            String[] extracted = common.SQLquery(query, parameters, columnResults, false, -1, null);
            byte[] extract = Base64.getDecoder().decode(extracted[0]);
            ByteArrayInputStream bis = new ByteArrayInputStream(extract);
            try {
                dimensions = common.reziseProportionally( ImageIO.read(bis), 800, 1000) ;
            } catch (IOException ex) {
                Logger.getLogger(contestForum.class.getName()).log(Level.SEVERE, null, ex);
            }
            ImageIcon image = new ImageIcon(extract);
            Image img = image.getImage();
            System.out.println("dimensions" + dimensions[0]+ dimensions[1]);
            Image scaledImg = img.getScaledInstance(dimensions[0], dimensions[1],Image.SCALE_SMOOTH);
            ImageIcon newImage = new ImageIcon(scaledImg);
            imageDisplayer.setIcon(newImage);
    }//GEN-LAST:event_titlesActionPerformed

    private void voteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteButtonActionPerformed
        //YALLA userVoted =  
        personalVotesLeft = calculateVotesLeft();
        votesLeft.setText("Votes left: "+ calculateVotesLeft());
        if(personalVotesLeft>0){
            String query =  "SELECT * FROM VotesperSubmission WHERE titleSubmission = ? AND contestID = ?";
            String[] columnResults = {"votes"};
            String[] parameters = {String.valueOf(titles.getSelectedItem()) , common.contestID};
            String[] stringVotes = common.SQLquery(query, parameters, columnResults, false, -1, null);
            int votes = Integer.parseInt(stringVotes[0]);
            votes++;
            stringVotes[0] = Integer.toString(votes);
            query = "UPDATE VotesperSubmission SET votes= ? WHERE titleSubmission = ? AND contestID = ?";
            String[] parameter2 = {stringVotes[0],String.valueOf(titles.getSelectedItem()) , common.contestID};
            common.SQLquery(query, parameter2, null, true, -1, null);
            query = "UPDATE VotesperContest SET userVotes =CONCAT(userVotes, ?) WHERE contestID = ?";
            String[] parameter3 = {common.currentUser, common.contestID};
            common.SQLquery(query, parameter3, null, true, -1, null);
            votesLeft.setText("Votes left: "+ votes);
        }
        else{
            warning.setText("No votes left");
        }
        
    }//GEN-LAST:event_voteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(contestVoting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(contestVoting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(contestVoting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(contestVoting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new contestVoting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel imageDisplayer;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> titles;
    private javax.swing.JButton voteButton;
    private javax.swing.JLabel votesLeft;
    private javax.swing.JLabel warning;
    // End of variables declaration//GEN-END:variables
}
